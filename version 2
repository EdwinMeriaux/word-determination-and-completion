#errors:
#in the there those them them list the is always chosen since it is sorter I think

#these files are the necessary imports
import pynput
import random
from pynput import keyboard
from pynput.keyboard import Key, Listener, Controller

#setting up key variables
variable = 0
yesno = 0

#lits used
letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
word = []
word_number = []
clearlist = []
order = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]
order2 = [3,4]
list1 = []
previous = 0

letterwordsa = []
letterwordsb = []
letterwordsc = []
letterwordsd = []
letterwordse = []
letterwordsf = []
letterwordsg = []
letterwordsh = []
letterwordsi = []
letterwordsj = []
letterwordsk = []
letterwordsl = []
letterwordsm = []
letterwordsn = []
letterwordso = []
letterwordsp = []
letterwordsq = []
letterwordsr = []
letterwordss = []
letterwordst = []
letterwordsu = []
letterwordsv = []
letterwordsw = []
letterwordsx = []
letterwordsy = []
letterwordsz = []

letterwords = [['a',0,letterwordsa],['b',0,letterwordsb],['c',0,letterwordsc],['d',0,letterwordsd],['e',0,letterwordse],['f',0,letterwordsf],['g',0,letterwordsg],['h',0,letterwordsh],['i',0,letterwordsi],['j',0,letterwordsj],['k',0,letterwordsk],['l',0,letterwordsl],['m',0,letterwordsm],['n',0,letterwordsn],['o',0,letterwordso],['p',0,letterwordsp],['q',0,letterwordsq],['r',0,letterwordsr],['s',0,letterwordss],['t',0,letterwordst],['u',0,letterwordsu],['v',0,letterwordsv],['w',0,letterwordsw],['x',0,letterwordsy],['y',0,letterwordsy],['z',0,letterwordsz]]

def shift():
    global list5
    global list6
    global arbitrary
    global arbitrary2
    global arbitrary3
    arbitrary = 0
    arbitrary2 = 0
    arbitrary3 = 0
    value = len(word_number)
    print('value',value)
    list5 = []
    list6 = []
    print(word_number)
    for i in letterwords[word_number[0]][2]:
        print(i)
        while value > arbitrary:
            if word_number[arbitrary2] == i[(arbitrary2+1)*2]:
                print(word_number[arbitrary2])
                print(i[(arbitrary2+1)*2])
                arbitrary3 = arbitrary3 + 1
                print(arbitrary3)
            arbitrary = arbitrary + 1
            arbitrary2 = arbitrary2 + 1
        if arbitrary3 == value:
            list5.append(i)
        arbitrary = 0
        arbitrary2 = 0
        arbitrary3 = 0
    print(list5)
    #Controller().release(Key.shift)
    #Controller().press('a')
    for i in list5:
        print(list5)
        a = len(list5)
        print(a)
        x = 0
        y = 1
        while y < a:
            if list5[x][0] >= list5[y][0]:
                y = y + 1
            elif list5[x][0] < list5[y][0]:
                x = y
                y = y + 1
            else:
                print('error')
                return False
            list6.append(list5[x])
            list5.pop(x)
            a = a - 1
    list6.append(list5[0])
    #list5.pop(x)
    list5 = []
    print('list6',list6)
    Controller().release(Key.shift)
    value2 = (len(list6[0])-1)/2
    value3 = 0
    while value3 < value2:
        value3 = value3 + 1
        print('value2',value2)
        print('value3', value3)
        print('value', value)
        print('while')
        if value3 > value:
            Controller().press(keyboard.KeyCode.from_char(list6[0][value3*2-1]))
            print(list6[0][value3*2])
        

def sort_rest(word_number):
    global ticker
    global b
    global x
    global y
    global list3
    global list4
    global alpha
    global base
    for a in order2:
        print('a',a)
        ticker = 0
        ticker2 = 0
        ticker3 = 0
        list3 = []
        for i in letterwords[word_number[0]][2]:
            print(len(i))
            print(i)
            print(word_number)
            ticker2 = ticker2 + 1
            if len(i) >= ((a-2)*2+4):
                list3.append(i)
                ticker = ticker + 1
                print('ticker',ticker)
                if ticker3 == 0:
                    ticker3 = ticker2 - 1
                    print('ticker3',ticker3)
        print('list3')
        print(list3)
        list4 = []
        base = len(list3)
        while len(list4)<base:
            print('a')
            alpha = len(list3) - 1
            while alpha > 0:
                print('b')
                y = 1
                x = 0
                while y <= alpha:
                    print('c')
                    print('x',x)
                    print('y',y)
                    if list3[x][(a-2)*2+3] <= list3[y][(a-2)*2+3]:
                        y = y+1
                    elif list3[x][(a-2)*2+3] > list3[y][(a-2)*2+3]:
                        x = y
                        y = y + 1
                    else:
                        print('error')
                        return False
                list4.append(list3[x])
                list3.pop(x)
                print('list4', list4)
                print('list3', list3)
                base = base - 1
                alpha = alpha - 1
                if base == 1:
                    list4.append(list3[0])
                    list3 = []
                    base = 0
                    alpha = 0
            if base == 1:
                list4.append(list3[0])
                list3 = []
                base = 0
                alpha = 0
        for i in list4:
            letterwords[word_number[0]][2].remove(i)
            print('i',i)
            print(letterwords[word_number[0]][2])
        for i in list4:
            letterwords[word_number[0]][2].insert(ticker3, i)
            ticker3 = ticker3 + 1
            print(letterwords[word_number[0]][2])

def sort(word_number):
    global letterwords
    global a
    global b
    global x
    global y
    value = word_number[0]
    list2 = []
    b = len(letterwords[word_number[0]][2])
    while len(list2) < b:
        a = len(letterwords[word_number[0]][2]) - 1
        while a > 0:
            y = 1
            x = 0
            while y <= a:
                if letterwords[word_number[0]][2][x][3] <= letterwords[word_number[0]][2][y][3]:
                    y = y + 1
                elif letterwords[word_number[0]][2][x][3] > letterwords[word_number[0]][2][y][3]:
                    x = y
                    y = y + 1
                else:
                    print('error')
                    return False
            list2.append(letterwords[word_number[0]][2][x])
            letterwords[word_number[0]][2].pop(x)
            print('ho')
            print(list2)
            b = b - 1
            a = a - 1
            if b == 1:
                list2.append(letterwords[word_number[0]][2][0])
                letterwords[word_number[0]][2] = []
                b = 0
                a = 0
    
        if b == 1:
            list2 = (letterwords[word_number[0]][2])
            letterwords[word_number[0]][2] = []
            b = 0
            a = 0
        

    letterwords[word_number[0]][2] = list2
    sort_rest(word_number)

def word_print():
    for i in order:
        print(letterwords[i][2])

def word_insertion(word,word_number):
    print('word_insertion')
    global yesno
    global letterwords
    global yesno
    global list1
    yesno = 0
    y = 0
    x = len(word)
    list1.append(1)
    while x > y:
        list1.append(word[y])
        list1.append(word_number[y])
        y = y + 1
    for i in letterwords[word_number[0]][2]:
        if list1[1:] == i[1:]:
            yesno = yesno + 1
            i[0] = i[0] + 1
        else:
            yesno = yesno
    if yesno == 1:
        print('yesno', yesno)
    else:
        if len(list1) > 2:
            letterwords[word_number[0]][2].append(list1)
            sort(word_number)
        elif len(list1) < 2:
            letterwords[word_number[0]][2].insert(1,list1)
    list1 = []

def termination():
    for i in order:
        print(letterwords[i][0],letterwords[i][1])

def word_appender(i,variable):
    global word
    global word_number
    word.append(i)
    word_number.append(variable)
    letterwords[variable][1] = letterwords[variable][1] + 1

def word_clear():
    global word
    global word_number
    if len(word) != 0:
        word_insertion(word,word_number)
        word_print()
        word = []
        word_number = []

def noshift():
    print('under current circumstances shift cannot be used to autofil')

def letter(key):
    global variable
    global previous
    variable = 0
    for i in letters:
        if key == keyboard.KeyCode.from_char(i):
            print(i)
            word_appender(i,variable)
            previous = 1
        if key == Key.space:
            word_clear()
        if key == Key.shift:
            if len(word) > 0:
                if previous != 0:
                    print(previous)
                    if letterwords[previous][1]>0:
                        shift()
                    else:
                        noshift()
                    previous = 0
            else:
                print('no letters to autocomplete')
                noshift()
        variable = variable + 1

def on_press(key): #everything that happens after a key was pressed
    print("{0} pressed".format(key))
    letter(key)
    
def on_release(key): #everythin that happens once a key was released
    if key == Key.esc: #termination sequence and presentation of data
        termination()
        return False

with Listener(on_press = on_press, on_release = on_release) as listener:
    listener.join()
